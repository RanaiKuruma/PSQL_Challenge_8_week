-- A Customer Nodes Exploration

-- again
--1 How many unique nodes are there on the Data Bank system?
-- We need the count of nodes from each and every region and then add them together
WITH node_count_cte AS (
SELECT 
  region_id,
  COUNT(DISTINCT node_id) AS node_count
FROM data_bank.customer_nodes
GROUP BY region_id
)
SELECT 
  SUM(node_count) AS unique_node_count
FROM node_count_cte;

--2 What is the number of nodes per region?
SELECT 
  t2.region_id,
  t2.region_name,
  COUNT(DISTINCT t1.node_id) AS nodes 
FROM data_bank.customer_nodes AS t1 
INNER JOIN data_bank.regions AS t2 
  ON t1.region_id = t2.region_id
GROUP BY 
t2.region_id,
t2.region_name
ORDER BY t2.region_id;

--3 How many customers are allocated to each region?
-- Think about the duplicate records in the dataset 
SELECT 
  t2.region_name,
  COUNT(DISTINCT t1.customer_id) AS customer_count
FROM data_bank.customer_nodes AS t1 
INNER JOIN data_bank.regions AS t2 
  ON t1.region_id = t2.region_id
GROUP BY t2.region_name
ORDER BY t2.region_name;

--4 How many days on average are customers reallocated to a different node?
-- Only include the nodes which are reallocated i.e node changes from one date to another 
WITH duration_cte AS (
SELECT 
  customer_id,
  node_id,
  start_date,
  end_date,
  LAG(node_id) OVER (PARTITION BY customer_id ORDER BY start_date) AS prev_node
FROM data_bank.customer_nodes
WHERE EXTRACT(YEAR FROM end_date) != '9999'
ORDER BY 
  customer_id,
  start_date
)
SELECT 
  ROUND(AVG(end_date - start_date)) AS average_days
FROM duration_cte
WHERE prev_node != node_id;


--5 What is the median, 80th and 95th percentile for this same reallocation days metric for each region?
WITH duration_cte AS (
SELECT 
  t2.region_name,
  t1.customer_id,
  t1.node_id,
  t1.start_date,
  t1.end_date,
  LAG(t1.node_id) OVER (PARTITION BY t1.customer_id ORDER BY t1.start_date) AS prev_node
FROM data_bank.customer_nodes AS t1 
INNER JOIN data_bank.regions AS t2 
  ON t1.region_id = t2.region_id 
WHERE
  EXTRACT(YEAR FROM t1.end_date) != '9999'
ORDER BY 
  t1.customer_id,
  t1.start_date
),
node_reallocation AS (
SELECT 
  region_name,
  ROUND(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY end_date - start_date)) AS median,
  ROUND(PERCENTILE_CONT(0.8) WITHIN GROUP (ORDER BY end_date - start_date)) AS percentile_80,
  ROUND(PERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY end_date - start_date)) AS percentile_95 
FROM duration_cte
WHERE prev_node != node_id
GROUP BY region_name
)
SELECT 
  region_name,
  median,
  percentile_80,
  percentile_95
FROM node_reallocation;


-- B. Customer Transactions

--1 What is the unique count and total amount for each transaction type?
SELECT 
  txn_type,
  COUNT(*) AS transaction_count,
  SUM(txn_amount) AS total_transaction_amount
FROM data_bank.customer_transactions
GROUP BY txn_type;

--2 What is the average total historical deposit counts and amounts for all customers?
-- again 
WITH historical_deposit AS (
SELECT 
  customer_id,
  COUNT(*) AS deposit_count, 
  SUM(txn_amount) AS total_deposit
FROM data_bank.customer_transactions
WHERE txn_type = 'deposit'
GROUP BY customer_id
)
SELECT 
  ROUND(AVG(deposit_count)) AS average_deposit_count,
  ROUND(SUM(total_deposit) / SUM(deposit_count)) AS average_amount
FROM historical_deposit;

--3 For each month - how many Data Bank customers make more than 1 deposit and either 1 purchase or 1 withdrawal in a single month?

WITH monthly_transactions AS (
SELECT
  DATE_TRUNC('month', txn_date) AS month,
  customer_id,
  SUM(CASE WHEN txn_type = 'deposit' THEN 1 ELSE 0 END ) AS deposit_count,
  SUM(CASE WHEN txn_type = 'purchase' THEN 1 ELSE 0 END ) AS purchase_count,
  SUM(CASE WHEN txn_type = 'withdrawal' THEN 1 ELSE 0 END ) AS withdrawal_count
FROM data_bank.customer_transactions
GROUP BY 
  month,
  customer_id
)
SELECT 
  month,
  COUNT(DISTINCT customer_id) AS customer_count
FROM monthly_transactions
WHERE 
  deposit_count > 1 AND (purchase_count >= 1 OR withdrawal_count >= 1)
GROUP BY month 
ORDER BY month;

--4 What is the closing balance for each customer at the end of the month?
SELECT 
  DATE_TRUNC('month', txn_date) AS month,
  COUNT(txn_amount) AS month_end_balance
FROM data_bank.customer_transactions
GROUP BY month
ORDER BY month;

--5 Comparing the closing balance of a customer’s first month and the closing balance from their second nth, what percentage of customers:
-- Have a negative first month balance?
-- Have a positive first month balance?
-- Increase their opening month’s positive closing balance by more than 5% in the following month?
-- Reduce their opening month’s positive closing balance by more than 5% in the following month?
-- Move from a positive balance in the first month to a negative balance in the second month?
